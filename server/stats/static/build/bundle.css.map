{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { afterUpdate, onMount } from 'svelte';\n\timport Graph from './Graph.svelte';\n\n\tlet server_root = 'http://127.0.0.1:8000/'\n\n\tlet server_list = []\n\tlet channels_dict = {}\n\n\tasync function list_servers() {\n\t\tlet r = await fetch(server_root+'servers')\n\n\t\tif (!r.ok) {\n\t\t\tconsole.log(\"HTTP-Error: \" + r.status);\n\t\t\treturn {}\n\t\t}\n\n\t\tlet json = await r.json()\n\t\treturn Object.values(json);\n\t}\n\n\tasync function list_channels(server, update=false) {\n\t\tlet r = await fetch(server_root+'channels/' + server + '/' + (update?'?update=true':''))\n\n\t\tif (!r.ok) {\n\t\t\tconsole.log(\"HTTP-Error: \" + r.status);\n\t\t\treturn {}\n\t\t}\n\n\t\treturn await r.json()\n\t}\n\n\tfunction sort_channels(server_id, cmp) {\n\t\tlet channels = channels_dict[server_id]\n\t\tchannels.sort(cmp);\n\t\tserver_list = server_list\n\t}\n\n\tfunction sort_channels__name(server) {\n\t\tlet sort_func = function(a, b){return a.name.localeCompare(b.name)}\n\t\treturn sort_channels(server, sort_func)\n\t}\n\tfunction sort_channels__messages_last_hour(server) {\n\t\tlet sort_func = function(a, b){return b.messages_last_hour-a.messages_last_hour}\n\t\treturn sort_channels(server, sort_func)\n\t}\n\tfunction sort_channels__last_message(server) {\n\t\tlet sort_func = function(a, b){return new Date(b.last_message.date)-new Date(a.last_message.date)}\n\t\treturn sort_channels(server, sort_func)\n\t}\n\tfunction sort_channels__total_messages(server) {\n\t\tlet sort_func = function(a, b){return b.total_messages-a.total_messages}\n\t\treturn sort_channels(server, sort_func)\n\t}\n\n\tasync function update_channels(server_id) {\n\t\tconsole.debug(\"Updating\")\n\t\tlet c_list = channels_dict[server_id]\n\t\tlet updated_channels = await list_channels(server_id, true)\n\t\tfor (let c of c_list) {\n\t\t\tc.last_message = updated_channels[c.id].last_message\n\t\t\tc.messages_last_hour = updated_channels[c.id].messages_last_hour\n\t\t}\n\t\tserver_list = server_list\n\t}\n\n\tasync function update_channels_loop(server_id) {\n\t\tsetTimeout(async () => {\n\t\t\tawait update_channels(server_id)\n\t\t\tupdate_channels_loop(server_id)\n\t\t}, 10000);\n\t}\n\n\tasync function get_channels(server_id) {\n\t\tif (!(server_id in channels_dict)) {\n\t\t\tlet channels = Object.values(await list_channels(server_id))\n\n\t\t\tchannels.sort(function(a, b){return a.name.localeCompare(b.name)})\n\t\t\tchannels_dict[server_id] = channels\n\n\t\t\tconsole.log(\"Setting auto-update\")\n\t\t\tawait update_channels_loop(server_id)\n\t\t}\n\t\treturn channels_dict[server_id]\n\t}\n\n\tasync function init() {\n\t\tserver_list = await list_servers()\n\t}\n\tonMount(init)\n\n</script>\nâ€‹\n\n<main>\n\t<h1>Portal Radar</h1>\n\t<ul class=\"server_list\">\n\t{#each server_list as s, i}\n\t\t<li class=\"server_item\">\n\t\t\t<div class=\"server_name\">\n\t\t\t\t{s.name}\n\t\t\t</div>\n\t\t\t<div class=\"server_stats\">\n\t\t\t\t<div>\n\t\t\t\t\t{s.total_members} members\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{s.channel_count} channels\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{s.total_messages} messages\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"server_growth\">\n\t\t\t\t<b>Member Growth</b>\n\t\t\t\t<div>\n\t\t\t\t\t+{s.members_joined_last_24h} in the last day\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t+{s.members_joined_per_day_avg.toFixed(2)} every day (avg)\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"server_activity\">\n\t\t\t\t<div>\n\t\t\t\t\t<b>Activity</b>\n\t\t\t\t</div>\n\t\t\t\t<time datetime=\"{s.last_message.date}\">\n\t\t\t\tLast message: {s.last_message.date_text}\n\t\t\t\t</time>\n\t\t\t\t<div>\n\t\t\t\t\t{s.messages_last_hour} messages in the last hour\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"server_activity_graphs\">\n\t\t\t\t<Graph type=\"mph_by_dow\" data=\"{s.mph_by_dow}\" title=\"Messages by Day of Week\"/>\n\t\t\t\t<Graph type=\"mph_by_hod\" data=\"{s.mph_by_hod}\" title=\"Messages by Hour of Day (UTC)\" show_x_axis=true/>\n\t\t\t</div>\n\t\t\t<div class=\"server_channel_list\">\n\t\t\t\t{#await get_channels(s.id)}\n\t\t\t\t\t<p>...waiting for channels...</p>\n\t\t\t\t{:then channel_list}\n\t\t\t\t\t<div class=\"sort_menu\">\n\t\t\t\t\t\tSort by:\n\t\t\t\t\t\t<button on:click={() => sort_channels__name(s.id)}>\n\t\t\t\t\t\t\tName\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button on:click={() => sort_channels__last_message(s.id)}>\n\t\t\t\t\t\t\tLast message\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button on:click={() => sort_channels__messages_last_hour(s.id)}>\n\t\t\t\t\t\t\tMessages in the last hour\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button on:click={() => sort_channels__total_messages(s.id)}>\n\t\t\t\t\t\t\tTotal messages\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<!-- <button on:click={() => update_channels(s.id)}>\n\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t</button> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul>\n\t\t\t\t\t{#each channel_list as c, i}\n\t\t\t\t\t\t<li class=\"channel_item\">\n\t\t\t\t\t\t\t<div class=\"channel_name\">\n\t\t\t\t\t\t\t\t<a href=\"https://discord.com/channels/{s.id}/{c.id}\" target=\"_blank\">\n\t\t\t\t\t\t\t\t\t{c.name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"channel_stats\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{c.total_messages} messages\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{c.messages_last_hour} in the last hour\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<time datetime=\"{c.last_message.date}\">\n\t\t\t\t\t\t\t\t\tLast message: {c.last_message.date_text}\n\t\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"server_activity_graphs\">\n\t\t\t\t\t\t\t\t<Graph type=\"mph_by_dow\" data=\"{c.mph_by_dow}\" />\n\t\t\t\t\t\t\t\t<Graph type=\"mph_by_hod\" data=\"{c.mph_by_hod}\" show_x_axis=true/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</li>\n\t\t\t\t\t{/each}\n\t\t\t\t\t</ul>\n\t\t\t\t{:catch error}\n\t\t\t\t\tError loading channels\n\t\t\t\t{/await}\n\t\t\t</div>\n\t\t</li>\n\t{/each}\n\t</ul>\n</main>\n\n<style>\n.server_name {\n\tgrid-area: server;\n\tfont-weight: bold;\n\tfont-size: 20px;\n}\n.server_stats {\n\tgrid-area: stats;\n}\n.server_growth {\n\tgrid-area: growth;\n}\n.server_activity {\n\tgrid-area: activity;\n}\n.server_activity_graphs {\n\tgrid-area: activity_graphs;\n\tdisplay: flex;\n}\n.server_channel_list {\n\tgrid-area: channels\n}\n\n.mph_by_dow {\n\twidth: 400px;\n\tmargin: auto;\n}\n.mph_by_hod {\n\twidth: 400px;\n\tmargin: auto;\n}\n\n.server_item {\n\tdisplay: grid;\n\tgrid-template-columns: 200px 200px 900px;\n\n\tgrid-template-areas:\n\t\t\"server growth   activity_graphs\"\n\t\t\"stats  activity activity_graphs\"\n\t\t\"channels channels channels\";\n\n\tpadding: 10px;\n\tborder: 3px solid silver;\n\tborder-radius: 10px;\n}\n\n.channel_name {\n\tgrid-area: name;\n\tfont-weight: bold;\n\tfont-size: 18px;\n}\n\n.channel_stats {\n\tgrid-area: stats;\n}\n\n.channel_item {\n\tdisplay: grid;\n\tgrid-template-columns: 60px 300px 800px;\n\n\tgrid-template-areas:\n\t\t\"blank name   activity_graphs\"\n\t\t\"blank stats  activity_graphs\"\n\t;\n\n\tmargin-top: 10px;\n\tpadding: 10px;\n\tbackground: #eee;\n\tborder-bottom: 1px solid silver;\n\t/* border-radius: 10px; */\n}\n\n.sort_menu {\n\tmargin-top: 40px;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nmain {\n\ttext-align: center;\n\tpadding: 1em;\n\tmax-width: 240px;\n\tmargin: 0 auto;\n}\n\nh1 {\n\tcolor: #ff3e00;\n\ttext-transform: uppercase;\n\tfont-size: 4em;\n\tfont-weight: 100;\n}\n\n@media (min-width: 640px) {\n\tmain {\n\t\tmax-width: none;\n\t}\n}\n</style>\n<link rel=\"stylesheet\" href=\"uPlot/uPlot.min.css\">"
  ],
  "names": [],
  "mappings": "AAwMA,YAAY,eAAC,CAAC,AACb,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AAChB,CAAC,AACD,aAAa,eAAC,CAAC,AACd,SAAS,CAAE,KAAK,AACjB,CAAC,AACD,cAAc,eAAC,CAAC,AACf,SAAS,CAAE,MAAM,AAClB,CAAC,AACD,gBAAgB,eAAC,CAAC,AACjB,SAAS,CAAE,QAAQ,AACpB,CAAC,AACD,uBAAuB,eAAC,CAAC,AACxB,SAAS,CAAE,eAAe,CAC1B,OAAO,CAAE,IAAI,AACd,CAAC,AACD,oBAAoB,eAAC,CAAC,AACrB,SAAS,CAAE,QAAQ;AACpB,CAAC,AAWD,YAAY,eAAC,CAAC,AACb,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAExC,mBAAmB,CAClB,iCAAiC;EACjC,iCAAiC;EACjC,4BAA4B,CAE7B,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CACxB,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,aAAa,eAAC,CAAC,AACd,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AAChB,CAAC,AAED,cAAc,eAAC,CAAC,AACf,SAAS,CAAE,KAAK,AACjB,CAAC,AAED,aAAa,eAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAEvC,mBAAmB,CAClB,8BAA8B;EAC9B,8BAA8B;CAC/B,CAEA,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,MAAM,AAEhC,CAAC,AAED,UAAU,eAAC,CAAC,AACX,UAAU,CAAE,IAAI,AACjB,CAAC,AAaD,IAAI,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC"
}